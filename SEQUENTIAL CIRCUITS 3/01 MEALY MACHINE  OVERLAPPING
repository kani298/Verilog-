module fsm_1010 (
    input clk,
    input rst,     
    input i,
    output reg y
);
parameter S0 = 2'd0,  
          S1 = 2'd1,  
          S2 = 2'd2,  
          S3 = 2'd3;

reg [1:0] state, next_state;

always @(posedge clk or negedge rst) begin
  if (!rst)
    state <= S0;
  else
    state <= next_state;
end

always @(*) begin
  case (state)
    S0: next_state = (i == 1) ? S1 : S0;
    S1: next_state = (i == 0) ? S2 : S1;
    S2: next_state = (i == 1) ? S3 : S0;
    S3: next_state = (i == 0) ? S2 : S1;  
    default: next_state = S0;
  endcase
end


always @(posedge clk or negedge rst) begin
  if (!rst)
    y <= 0;
  else if (state == S3 && i == 0)
    y <= 1;
  else
    y <= 0;
end

endmodule
