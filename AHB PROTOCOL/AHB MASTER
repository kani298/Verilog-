module ahb_master (
    input wire clk,
    input wire reset_n,
    input wire hgrant,
    output reg hbusreq,
    output reg [31:0] haddr,
    output reg hwrite,
    output reg [2:0] hsize,
    output reg [2:0] hburst,
    output reg [3:0] hprot,
    output reg [31:0] hwdata,
    input wire [31:0] hrdata,
    input wire hready
);

// State encoding using parameters (pure Verilog)
parameter IDLE     = 2'b00;
parameter REQUEST  = 2'b01;
parameter TRANSFER = 2'b10;

reg [1:0] state;

always @(posedge clk or negedge reset_n) begin
    if (!reset_n) begin
        state     <= IDLE;
        hbusreq   <= 1'b0;
        haddr     <= 32'b0;
        hwrite    <= 1'b0;
        hsize     <= 3'b000;
        hburst    <= 3'b000;
        hprot     <= 4'b0000;
        hwdata    <= 32'b0;
    end else begin
        case (state)
            IDLE: begin
                hbusreq <= 1'b1;
                if (hgrant) begin
                    state <= REQUEST;
                end
            end

            REQUEST: begin
                haddr  <= 32'h00000000;
                hwrite <= 1'b1;
                hsize  <= 3'b010;
                hburst <= 3'b000;
                hprot  <= 4'b0011;
                hwdata <= 32'h12345678;
                if (hready) begin
                    state <= TRANSFER;
                end
            end

            TRANSFER: begin
                hbusreq <= 1'b0;
                if (hready) begin
                    state <= IDLE;
                end
            end

            default: state <= IDLE;
        endcase
    end
end

endmodule
