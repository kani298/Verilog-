
module tff (
    input clk,
    input reset,
    input load,
    input data_in,
    input t,
    output reg q
);
    always @(negedge clk or negedge reset) begin
        if (!reset)
            q <= 1'b1;
        else if (load)
            q <= data_in;
        else if(t)
            q <= ~q;
    end
endmodule

module loadable_async_down_counter_3bit (
    input clk,
    input reset,
    input load,
    input [2:0] data_in,
    output q0,q1,q2
);
    tff t0(.q(q0), .clk(clk), .reset(reset),.t(1'b1),.load(load),.data_in(data_in[0]));  
    tff t1(.q(q1), .clk(~q0), .reset(reset),.t(1'b1),.load(load),.data_in(data_in[1]));
    tff t2(.q(q2), .clk(~q1), .reset(reset),.t(1'b1),.load(load),.data_in(data_in[2]));
    

endmodule

