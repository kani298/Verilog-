module tff_with_load (
    input wire clk,
    input wire reset,
    input wire t,
    input wire load,
    input wire d_load,   
    output reg q
);
    always @(posedge clk) begin
        if (reset)
            q <= 1'b0;
        else if (load)
            q <= d_load;
        else if (t)
            q <= ~q;
    end
endmodule

module loadable_updown_counter_3bit_ff (
    input wire clk,
    input wire reset,
    input wire load,
    input wire up,  // 1 = up, 0 = down
    input wire [2:0] data_in,
    output wire [2:0] q
);
    wire t0,t1,t2;
    assign t0 = 1;
    assign t1 = up ? q[0]         : ~q[0];
    assign t2 = up ? q[0]&q[1]    : ~q[0]&~q[1];

    tff_with_load tff0(clk, reset, t0, load, data_in[0], q[0]);
    tff_with_load tff1(clk, reset, t1, load, data_in[1], q[1]);
    tff_with_load tff2(clk, reset, t2, load, data_in[2], q[2]);
endmodule
