module tb;

    reg clk;
    reg reset;
    reg load;
    reg up_down;
    reg [2:0] data_in;
    wire [2:0] q;

 
    loadable_async_updown_counter_3bit_ff DUT (
        .clk(clk),
        .reset(reset),
        .load(load),
        .up_down(up_down),
        .data_in(data_in),
        .q(q)
    );


    initial begin
        clk = 0;
        forever #5 clk = ~clk; 
    end

  
    initial begin
        $monitor("t=%0t:clk=%b,reset=%b,load=%b,up_down=%b,data_in=%b,q=%b",$time, clk, reset, load, up_down, data_in, q);

        //Apply reset 
        reset = 0; load = 0; up_down = 1; data_in = 3'b000;
        #10 reset = 1;

        //Load 111 to start down counting
        load = 1; data_in = 3'b111;
        #10 load = 0;

        // Begin down counting from 111
        up_down = 1;  
        #100;

        // Load another value,101
        load = 1; data_in = 3'b101;                                 
        #10 load = 0;
        #60;

        //Begin up counting from 101
        up_down = 0;  
        #100;
        $finish;
    end

endmodule
