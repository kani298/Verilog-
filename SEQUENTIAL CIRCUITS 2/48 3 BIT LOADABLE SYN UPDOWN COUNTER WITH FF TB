module tb;

    reg clk;
    reg reset;
    reg load;
    reg up;
    reg [2:0] data_in;
    wire [2:0] q;

 
    loadable_updown_counter_3bit_ff DUT (
        .clk(clk),
        .reset(reset),
        .load(load),
        .up(up),
        .data_in(data_in),
        .q(q)
    );

    
    initial begin
        clk = 0;
        forever #5 clk = ~clk;
    end

   
    initial begin
        $monitor("t=%0t:clk=%b,reset=%b,load=%b,up=%b,data_in=%b,q=%b", 
                  $time, clk, reset, load, up, data_in, q);

        
        reset = 1; load = 0; up = 1; data_in = 3'b000;
        #12;

        
        reset = 0;
        up = 1;     
        #40;

        // Load value 101
        load = 1;
        data_in = 3'b101;
        #10;
        load = 0;

        // Continue counting up
        #40;

        // Switch to down count
        up = 0;
        #40;

        // Load value 010
        load = 1;
        data_in = 3'b010;
        #10;
        load = 0;

        // Count down
        #30;

        $finish;
    end

endmodule
