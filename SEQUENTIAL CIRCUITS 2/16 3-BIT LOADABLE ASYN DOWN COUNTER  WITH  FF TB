module tb;

    reg clk;
    reg reset;
    reg load;
    reg [2:0] data_in;
    wire q0,q1,q2;

    // Instantiate the counter
    loadable_async_down_counter_3bit DUT(.clk(clk),.reset(reset),.load(load),.data_in(data_in),.q0(q0),.q1(q1),.q2(q2));

    
    initial begin
        clk = 0;
        forever #5 clk = ~clk; 
    end

   
    initial begin
        $monitor("t=%0t:reset=%b,load=%b,data_in=%b,q0=%b,q1=%b,q2=%b", $time, reset,load, data_in, q0,q1,q2);

        
        reset= 0; load = 0; data_in = 3'b000;
        #10;
        reset = 1;
        #20;
        load = 0;
        #80;
        load = 1;
        data_in = 3'b101;
        #10;
        load = 0;
        #60;
        load = 1;
        data_in = 3'b011;
        #10;
        load = 0; 
        #50;
        $finish;
    end

endmodule

