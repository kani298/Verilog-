module async_down_counter_3bit (
    input wire clk,
    input wire reset,
    output reg [2:0] q
);
    wire [2:0]nq;
    assign nq=~q;
    
    always @(negedge clk or negedge reset) begin
        if (!reset)
            q[0] <= 1'b1;
        else
            q[0] <= ~q[0];
    end

   
    always @(negedge nq[0] or negedge reset) begin
        if (!reset)
            q[1] <= 1'b1;
        else
            q[1] <= ~q[1];
    end

    
    always @(negedge nq[1] or negedge reset) begin
        if (!reset)
            q[2] <= 1'b1;
        else
            q[2] <= ~q[2];
    end

endmodule
